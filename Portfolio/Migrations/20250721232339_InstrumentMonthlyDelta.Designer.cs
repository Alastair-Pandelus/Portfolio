// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portfolio.EntityModel;

#nullable disable

namespace Portfolio.Migrations
{
    [DbContext(typeof(PortfolioContext))]
    [Migration("20250721232339_InstrumentMonthlyDelta")]
    partial class InstrumentMonthlyDelta
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Portfolio.EntityModel.Correlation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Instrument1Id")
                        .HasColumnType("int");

                    b.Property<int>("Instrument2Id")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Correlation");
                });

            modelBuilder.Entity("Portfolio.EntityModel.Instrument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BondHoldings")
                        .HasColumnType("int");

                    b.Property<double?>("BondLong")
                        .HasColumnType("float");

                    b.Property<double?>("BondShort")
                        .HasColumnType("float");

                    b.Property<double?>("CashLong")
                        .HasColumnType("float");

                    b.Property<double?>("CashShort")
                        .HasColumnType("float");

                    b.Property<double>("ClosePrice")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "ClosePrice");

                    b.Property<double>("ClosePriceChange")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "ClosePriceChange");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Correlation")
                        .HasColumnType("float");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "currency");

                    b.Property<double?>("CustomBuyFee")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "CustomBuyFee");

                    b.Property<string>("Distribution")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Distribution");

                    b.Property<int?>("EquityHoldings")
                        .HasColumnType("int");

                    b.Property<string>("ExchangeCode")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "ExchangeCode");

                    b.Property<bool>("ExchangeTradedShare")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "ExchangeTradedShare");

                    b.Property<string>("IMASectorId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "IMASectorId");

                    b.Property<string>("IMASectorName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "IMASectorName");

                    b.Property<string>("ISIN")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "isin");

                    b.Property<string>("InstrumentType")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("IntradayAsk")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "Intraday.Ask");

                    b.Property<double?>("IntradayBid")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "Intraday.Bid");

                    b.Property<string>("InvestmentTypeId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "InvestmentTypeId");

                    b.Property<string>("LegalStructureId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "LegalStructureId");

                    b.Property<string>("LegalStructureName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "LegalStructureName");

                    b.Property<string>("MarketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MaxDrawdown")
                        .HasColumnType("float");

                    b.Property<int>("Medalist_RatingNumber")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Medalist_RatingNumber");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<double>("OngoingCharge")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "OngoingCharge");

                    b.Property<double?>("OtherLong")
                        .HasColumnType("float");

                    b.Property<double?>("OtherShort")
                        .HasColumnType("float");

                    b.Property<double>("PERatio")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "PERatio");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "Price");

                    b.Property<string>("PriceCurrencyId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "priceCurrencyId");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "rating");

                    b.Property<int>("RatingM36")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "RatingM36");

                    b.Property<double?>("RatioTechnology")
                        .HasColumnType("float");

                    b.Property<double?>("RatioUnitedStates")
                        .HasColumnType("float");

                    b.Property<double>("ReturnM0")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "ReturnM0");

                    b.Property<double>("ReturnM1")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "ReturnM1");

                    b.Property<double>("ReturnM12")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "ReturnM12");

                    b.Property<double?>("ReturnM120")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "ReturnM120");

                    b.Property<double>("ReturnM3")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "ReturnM3");

                    b.Property<double>("ReturnM36")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "ReturnM36");

                    b.Property<double>("ReturnM6")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "ReturnM6");

                    b.Property<double?>("ReturnM60")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "ReturnM60");

                    b.Property<double>("ReturnW1")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "ReturnW1");

                    b.Property<int?>("RiskRating")
                        .HasColumnType("int");

                    b.Property<string>("Sedol")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "sedol");

                    b.Property<string>("StarRating")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "StarRating");

                    b.Property<double?>("StockLong")
                        .HasColumnType("float");

                    b.Property<double?>("StockShort")
                        .HasColumnType("float");

                    b.Property<int?>("SustainabilityRating")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "SustainabilityRating");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Symbol");

                    b.Property<bool>("Watchlist")
                        .HasColumnType("bit");

                    b.Property<double>("YR_ReturnM12_1")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "YR_ReturnM12_1");

                    b.Property<double>("YR_ReturnM12_2")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "YR_ReturnM12_2");

                    b.Property<double>("YR_ReturnM12_3")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "YR_ReturnM12_3");

                    b.Property<double?>("YR_ReturnM12_4")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "YR_ReturnM12_4");

                    b.Property<double?>("YR_ReturnM12_5")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "YR_ReturnM12_5");

                    b.Property<string>("Y_Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Yield_M12")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "Yield_M12");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentType", "Sedol", "ISIN", "ExchangeCode", "Currency")
                        .IsUnique()
                        .HasFilter("[InstrumentType] IS NOT NULL AND [Sedol] IS NOT NULL AND [ISIN] IS NOT NULL AND [ExchangeCode] IS NOT NULL AND [Currency] IS NOT NULL");

                    b.ToTable("Instrument");
                });

            modelBuilder.Entity("Portfolio.EntityModel.InstrumentMonthlyDelta", b =>
                {
                    b.Property<double>("Delta")
                        .HasColumnType("float");

                    b.Property<int>("InstrumentId")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("Instrument5YearDeltas", (string)null);
                });

            modelBuilder.Entity("Portfolio.EntityModel.Portfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Portfolio");
                });

            modelBuilder.Entity("Portfolio.EntityModel.PortfolioHolding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InstrumentId")
                        .HasColumnType("int");

                    b.Property<int?>("PortfolioId")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentId");

                    b.HasIndex("PortfolioId");

                    b.ToTable("PortfolioHolding");
                });

            modelBuilder.Entity("Portfolio.EntityModel.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("InstrumentId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentId");

                    b.ToTable("Price");
                });

            modelBuilder.Entity("Portfolio.EntityModel.PriceDate", b =>
                {
                    b.Property<DateOnly>("Value")
                        .HasColumnType("date");

                    b.ToTable("DateRange");
                });

            modelBuilder.Entity("Portfolio.EntityModel.PortfolioHolding", b =>
                {
                    b.HasOne("Portfolio.EntityModel.Instrument", "Instrument")
                        .WithMany()
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portfolio.EntityModel.Portfolio", null)
                        .WithMany("Holdings")
                        .HasForeignKey("PortfolioId");

                    b.Navigation("Instrument");
                });

            modelBuilder.Entity("Portfolio.EntityModel.Price", b =>
                {
                    b.HasOne("Portfolio.EntityModel.Instrument", "Instrument")
                        .WithMany("Prices")
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instrument");
                });

            modelBuilder.Entity("Portfolio.EntityModel.Instrument", b =>
                {
                    b.Navigation("Prices");
                });

            modelBuilder.Entity("Portfolio.EntityModel.Portfolio", b =>
                {
                    b.Navigation("Holdings");
                });
#pragma warning restore 612, 618
        }
    }
}
